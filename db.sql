

CREATE TABLE category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    photo VARCHAR(255)
);

CREATE TABLE subcategory (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    photo VARCHAR(255),
    category_id BIGINT,
    FOREIGN KEY (category_id) REFERENCES category(id)
);

CREATE TABLE application (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    comment VARCHAR(255),
    full_name VARCHAR(255),
    number VARCHAR(255)
);

CREATE TABLE order_delivery (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    floor INTEGER NOT NULL,
    address VARCHAR(255),
    comment VARCHAR(255)
);

CREATE TABLE order_recipient (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    comment VARCHAR(255),
    company VARCHAR(255),
    email VARCHAR(255),
    full_name VARCHAR(255),
    phone VARCHAR(255)
);

CREATE TABLE orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    delivery_id BIGINT,
    recipient_id BIGINT,
    time TIMESTAMP(6),
    delivery_type VARCHAR(255) CHECK (delivery_type IN ('PICKUP', 'DELIVERY')),
    payment_type VARCHAR(255) CHECK (payment_type IN ('CASH', 'CARD', 'KASPI_QR')),
    FOREIGN KEY (delivery_id) REFERENCES order_delivery(id),
    FOREIGN KEY (recipient_id) REFERENCES order_recipient(id)
);

CREATE TABLE product (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(255),
    price INTEGER NOT NULL,
    kaspi VARCHAR(255),
    photo_path VARCHAR(255),
    category_id BIGINT,
    subcategory_id BIGINT,
    FOREIGN KEY (category_id) REFERENCES category(id),
    FOREIGN KEY (subcategory_id) REFERENCES subcategory(id)
);

CREATE TABLE product_property (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT,
    key VARCHAR(255),
    value VARCHAR(255),
    FOREIGN KEY (product_id) REFERENCES product(id)
);

CREATE TABLE order_product (
    order_id BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (product_id) REFERENCES product(id),
    PRIMARY KEY (order_id, product_id)
);
